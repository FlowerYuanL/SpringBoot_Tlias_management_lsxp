<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
  mapper 根标签：
  - namespace（必需）：绑定 Mapper 接口的全限定名（包名+接口名）
  - 作用：建立 XML 文件与 Java 接口的关联[1,6,8](@ref)
-->
<mapper namespace="com.lsxp.mapper.EmpMapper">
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into emp(username, name, gender, phone, job, salary, image, entry_date, dept_id, create_time, update_time)
        values(#{username},#{name},#{gender},#{phone},#{job},#{salary},#{image},#{entryDate},#{deptId},#{createTime},#{updateTime})
    </insert>


    <update id="update">
        update emp
            <trim prefix="set" suffixOverrides=",">
                <if test="username != null and username != ''">username = #{username},</if>
                <if test="password != null and password != ''">password = #{password},</if>
                <if test="name != null and name != ''">name = #{name},</if>
                <if test="gender != null">gender = #{gender},</if>
                <if test="job != null">job = #{job},</if>
                <if test="phone != null and phone != ''">phone = #{phone},</if>
                <if test="salary != null">salary = #{salary},</if>
                <if test="image != null and image != ''">image = #{image},</if>
                <if test="deptId != null">dept_id = #{deptId},</if>
                <if test="entryDate != null">entry_date = #{entryDate},</if>
                <if test="updateTime != null">update_time = #{updateTime},</if>
            </trim>
        where id = #{id}
    </update>



    <delete id="deleteBatch">
        delete from emp where id in
                        <foreach collection="ids" item="id" open="(" separator="," close=")">
                            #{id}
                        </foreach>
    </delete>

    <select id="findAll" resultType="com.lsxp.pojo.Emp">
        select e.*,d.name from emp e left join dept d
            on e.dept_id = d.id
            <where>
                <if test="name != null and name != '' ">
                    e.name like concat('%',#{name},'%')
                </if>
                <if test="gender != null">
                    and e.gender = #{gender}
                </if>
                <if test="begin != null and end != null">
                    and e.entry_date between #{begin} and #{end}
                </if>
            </where>
            order by e.update_time desc
    </select>

    <resultMap id="empAndExpr" type="com.lsxp.pojo.Emp">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="phone" property="phone"/>
        <result column="job" property="job"/>
        <result column="salary" property="salary"/>
        <result column="image" property="image"/>
        <result column="entry_date" property="entryDate"/>
        <result column="dept_id" property="deptId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <collection property="exprList" ofType="com.lsxp.pojo.EmpExpr">
            <id column="p_id" property="id"/>
            <result column="p_empId" property="empId"/>
            <result column="p_begin" property="begin"/>
            <result column="p_end" property="end"/>
            <result column="p_company" property="company"/>
            <result column="p_job" property="job"/>
        </collection>
    </resultMap>
    <select id="findById" resultMap="empAndExpr">
        select
            e.*,
            p.id p_id,
            p.emp_id p_empId,
            p.begin p_begin,
            p.end p_end,
            p.company p_company,
            p.job p_job
        from emp e left join emp_expr p on e.id = p.emp_id where e.id = #{id}
    </select>
</mapper>